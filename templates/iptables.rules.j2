*nat
:PREROUTING ACCEPT
:INPUT ACCEPT
:OUTPUT ACCEPT
:POSTROUTING ACCEPT
{% if 'tunnel' in iptables %}
-A POSTROUTING -s {{ iptables.tunnel.network }} -o {{ iptables.tunnel.device }} -j MASQUERADE
{% endif %}

COMMIT

*filter
{% if iptables.iptables_chain -%}
{% for chain in iptables.iptables_chain -%}
:{{ chain.name }} {{ chain.policy }}
{% endfor -%}
{% endif -%}

-F INPUT
-F OUTPUT

# Allows all loopback (lo0) traffic and drop all traffic to 127/8 that doesn't use lo0
-A INPUT -i lo -j ACCEPT
-A OUTPUT -o lo -j ACCEPT
-A INPUT ! -i lo -d 127.0.0.0/8 -j REJECT

# Accepts all established inbound connections
-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
-A OUTPUT -m state --state ESTABLISHED,RELATED -j ACCEPT

{% if 'ssh_port' in iptables -%}
# Allows SSH connections
# The --dport number is the same as in /etc/ssh/sshd_config
-A INPUT -p tcp -m state --state NEW --dport {{ iptables.ssh_port }} -j ACCEPT
{% endif %}

{% if iptables.iptables_chain -%}
	{% for chain in iptables.iptables_chain -%}

		{% if 'pipes' in chain -%}
{% for pipe in chain.pipes -%}
-A {{ pipe.chain }} -p {{ pipe.proto }} -m {{ pipe.proto }} -s {{ pipe.source }} -j {{ chain.name }}
{% endfor -%}
		{% endif -%}

		{% if 'rules' in chain -%}
			{% if 'tcp_dport_accept' in chain.rules -%}
{% for port in chain.rules.tcp_dport_accept -%}
-A {{ chain.name }} -p tcp -m tcp --dport {{ port }} -j ACCEPT
{% endfor -%}
			{% endif -%}

			{% if 'udp_dport_accept' in chain.rules -%}
{% for port in chain.rules.udp_dport_accept -%}
-A {{ chain.name }} -p udp -m udp --dport {{ port }} -j ACCEPT
{% endfor -%}
			{% endif -%}

			{% if 'udp_sport_dport_accept' in chain.rules -%}
{% for port in chain.rules.udp_sport_dport_accept -%}
-A {{ chain.name }} -p udp --sport {{ port.sport }} --dport {{ port.dport }} -j ACCEPT
{% endfor -%}
			{% endif -%}
		{% endif -%}

		{% if 'pipes_to' in chain -%}
{% for pipe in chain.pipes_to -%}
-A {{ chain.name }} -p {{ pipe.proto }} -m {{ pipe.proto }} -s {{ pipe.source }} -j {{ pipe.chain }}
{% endfor -%}
		{% endif -%}

		{% if 'jump' in chain -%}
-A {{ chain.name }} -j {{ chain.jump }}
		{%- endif -%}

	{% endfor -%}
{%- endif %}

# Allow icmp
-A INPUT -p icmp -j ACCEPT

# log iptables denied calls (access via 'dmesg' command)
-A INPUT -m limit --limit 5/min -j LOG --log-prefix "iptables denied: " --log-level 7


{% if 'tunnel' in iptables %}
-A FORWARD -i {{ iptables.tunnel.device }} -o {{ iptables.tunnel.tun_device }} -m state --state ESTABLISHED,RELATED -j ACCEPT
-A FORWARD -s {{ iptables.tunnel.network }} -o {{ iptables.tunnel.device }} -j ACCEPT
{% endif %}

# Reject all other inbound - default deny unless explicitly allowed policy:
-A INPUT -j REJECT
-A FORWARD -j REJECT

COMMIT
